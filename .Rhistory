addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
View(Q1)
View(Q1)
leaflet(after) %>% addTiles(group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.coun`)(`start.coun`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.coun, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.coun`)(`start.coun`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.coun, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.coun`)(`start.coun`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.coun, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.coun`)(`start.coun`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.coun, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=2, fillOpacity=0.6,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(3.5); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
leaflet(after) %>% addTiles(group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.coun`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.coun`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.coun`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.coun`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.coutn, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=2, fillOpacity=0.6,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(3.5); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
leaflet(after) %>% addTiles(group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.coutn, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=2, fillOpacity=0.6,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(3.5); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
End Count:", end.count)) %>%
leaflet(after) %>% addTiles(group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=2, fillOpacity=0.6,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=2, fillOpacity=0.6,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(3.5); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
leaflet(after) %>% addTiles(group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=1, fillOpacity=0.4,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(3.5); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
leaflet(after) %>% addTiles(group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=1, fillOpacity=0.6,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(6); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
leaflet(after) %>% addTiles(group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=2, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=1.5, fillOpacity=0.6,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(10); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
leaflet(after) %>% addTiles(group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=3, fillOpacity=0.6,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(10); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
leaflet(after) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=3, fillOpacity=0.6,
color = "black",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(10); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
leaflet(after) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=3, fillOpacity=0.6,
color = "lightgrey",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(10); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
View(Q4)
Q4_tem <- rbind(read.csv(extract_files[10]), read.csv(extract_files[11]), read.csv(extract_files[12]))[ , -1]
Q4 <- data.frame(unique(Q4_tem[ , c("station.id", "station.lat", "station.long")]))
for(i in c(1:length(Q4$station.id))) {
Q4$start.count[i] <- sum(Q4_tem[which(Q4_tem$station.id == Q4$station.id[i]), "start.count"])
Q4$end.count[i] <- sum(Q4_tem[which(Q4_tem$station.id == Q4$station.id[i]), "end.count"])
}
remove(Q4_tem)
Q4 <- Q4[which(Q4$station.long != 0), ]
View(Q4)
setwd("C:/Users/HK/Desktop/Columbia/2017 Spring/G4063 Data Visualization/G4063_Final Project/Data/extracted")
extract_to_count <- function(input_file, output_file) {
df1 <- read.csv(input_file)
#library(dplyr)
startid <- data.frame(unique(df1[ , c("Start.Station.ID", "Start.Station.Latitude", "Start.Station.Longitude")]))
colnames(startid) <- c("station.id", "station.lat", "station.long")
endid <- data.frame(unique(df1[ , c("End.Station.ID", "End.Station.Latitude", "End.Station.Longitude")]))
colnames(endid) <- colnames(startid)
totalid <- rbind(startid, endid)
output <- as.data.frame(unique(totalid))
output$start.count <- 0
output$end.count <- 0
for(i in c(1:length(output$station.id))) {
output$start.count[i] <- sum(df1$Start.Station.ID == output$station.id[i])
output$end.count[i] <- sum(df1$End.Station.ID == output$station.id[i])
}
write.csv(output, file = output_file)
remove(df1, startid, endid, totalid, output)
}
input_files <- c(#"201601.csv", "201602.csv", "201603.csv", "201604.csv",
#"201605.csv", "201606.csv", "201607.csv", "201608.csv",
#"201609.csv",
"201610.csv", "201611.csv", "201612.csv")
output_files <- c(#"201601_extracted.csv", "201602_extracted.csv", "201603_extracted.csv",
#"201604_extracted.csv", "201605_extracted.csv", "201606_extracted.csv",
#"201607_extracted.csv", "201608_extracted.csv", "201609_extracted.csv",
"201610_extracted.csv", "201611_extracted.csv", "201612_extracted.csv")
for(i in c(1:3)) {
extract_to_count(input_file = input_files[i], output_file = output_files[i])
}
remove(extract_to_count)
remove(input_files)
remove(output_files)
Q4_tem <- rbind(read.csv(extract_files[10]), read.csv(extract_files[11]), read.csv(extract_files[12]))[ , -1]
setwd("C:/Users/HK/Desktop/Columbia/2017 Spring/G4063 Data Visualization/G4063_Final Project")
Q4_tem <- rbind(read.csv(extract_files[10]), read.csv(extract_files[11]), read.csv(extract_files[12]))[ , -1]
Q4 <- data.frame(unique(Q4_tem[ , c("station.id", "station.lat", "station.long")]))
for(i in c(1:length(Q4$station.id))) {
Q4$start.count[i] <- sum(Q4_tem[which(Q4_tem$station.id == Q4$station.id[i]), "start.count"])
Q4$end.count[i] <- sum(Q4_tem[which(Q4_tem$station.id == Q4$station.id[i]), "end.count"])
}
remove(Q4_tem)
Q4 <- Q4[which(Q4$station.long != 0), ]
write.csv(Q4, "Q4.csv")
leaflet(after) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',
group = "map") %>%
addCircleMarkers(group = "Q1", data = Q1, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q2", data = Q2, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q3", data = Q3, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "Q4", data = Q4, weight=0, radius=4, fillOpacity=0.8,
lng = ~station.long, lat = ~station.lat,
color = ~colorNumeric("RdYlGn", `start.count`)(`start.count`),
popup=~paste("Name: ",station.id,"<br>
Start Count: ", start.count, "<br>
End Count:", end.count)) %>%
addCircleMarkers(group = "subway", data = subway, weight=0, radius=3, fillOpacity=0.6,
color = "lightgrey",
popup=~paste("Name: ",stop_name,"<br>
Trains: ", trains)) %>%
addLayersControl(baseGroups = "map",
overlayGroups =  c("Q1", "Q2", "Q3", "Q4", "subway"),
options = layersControlOptions(collapsed = F)) %>%
addMiniMap() %>% addEasyButton(easyButton(icon="fa-globe", title="Zoom to Entire US Map",
onClick=JS("function(btn, map){ map.setZoom(10); }"))) %>%
addEasyButton(easyButton(icon="fa-crosshairs", title="Locate Me",
onClick=JS("function(btn, map){ map.locate({setView: true}); }")))
remove(Q1data)
remove(Q2data, Q3data, Q4data)
remove(Q1point, Q2point, Q3point, Q4point)
save.image("C:/Users/HK/Desktop/Columbia/2017 Spring/G4063 Data Visualization/G4063_Final Project/Spatial_corr_parks.RData")
View(joined_data)
ggplot(joined_data[which(joined_data$start.coun != 0), ],
aes(x = start.coun, y = subway_count)) +
geom_point() + geom_smooth(method = "lm", se = F) +
ggtitle("Correlation between Subway and Citibike by Neighborhood") +
ylab("Num of Subway Station") + xlab("Num of Journey Start") +
theme_classic()
library(ggplot2)
ggplot(joined_data[which(joined_data$start.coun != 0), ],
aes(x = start.coun, y = subway_count)) +
geom_point() + geom_smooth(method = "lm", se = F) +
ggtitle("Correlation between Subway and Citibike by Neighborhood") +
ylab("Num of Subway Station") + xlab("Num of Journey Start") +
theme_classic()
y16_tem <- rbind(read.csv(extract_files[1]), read.csv(extract_files[2]),
read.csv(extract_files[3]), read.csv(extract_files[4]),
read.csv(extract_files[5]), read.csv(extract_files[6]),
read.csv(extract_files[7]), read.csv(extract_files[8]),
read.csv(extract_files[9]), read.csv(extract_files[10]),
read.csv(extract_files[11]), read.csv(extract_files[12]))[ , -1]
y16 <- data.frame(unique(y16_tem[ , c("station.id", "station.lat", "station.long")]))
for(i in c(1:length(y16$station.id))) {
y16$start.count[i] <- sum(y16_tem[which(y16_tem$station.id == y16$station.id[i]), "start.count"])
y16$end.count[i] <- sum(y16_tem[which(y16_tem$station.id == y16$station.id[i]), "end.count"])
}
remove(y16_tem)
y16 <- y16[which(y16$station.long != 0), ]
write.csv(y16, "y16.csv")
save.image("C:/Users/HK/Desktop/Columbia/2017 Spring/G4063 Data Visualization/G4063_Final Project/Spatial_corr_parks.RData")
ggplot(y16[which(y16$start.coun != 0), ],
aes(x = start.coun, y = subway_count)) +
geom_point() + geom_smooth(method = "lm", se = F) +
ggtitle("Correlation between Subway and Citibike by Neighborhood") +
ylab("Num of Subway Station") + xlab("Num of Journey Start") +
theme_classic()
ggplot(y16[which(y16$start.coun != 0), ],
aes(x = start.count, y = subway_count)) +
geom_point() + geom_smooth(method = "lm", se = F) +
ggtitle("Correlation between Subway and Citibike by Neighborhood") +
ylab("Num of Subway Station") + xlab("Num of Journey Start") +
theme_classic()
ggplot(joined_data[which(joined_data$start.coun != 0), ],
aes(x = start.coun, y = subway_count)) +
geom_point() + geom_smooth(method = "lm", se = F) +
ggtitle("Correlation between Subway and Citibike by Neighborhood") +
ylab("Num of Subway Station") + xlab("Num of Journey Start") +
theme_classic()
setwd("C:/Users/HK/Desktop/Columbia/2017 Spring/G4063 Data Visualization/G4063_Final Project/Citi-Bike-Usage-in-NYC")
setwd("C:/Users/HK/Desktop/Columbia/2017 Spring/G4063 Data Visualization/G4063_Final Project/Citi-Bike-Usage-in-NYC")
setwd("C:/Users/HK/Desktop/Columbia/2017 Spring/G4063 Data Visualization/G4063_Final Project/Citi-Bike-Usage-in-NYC")
